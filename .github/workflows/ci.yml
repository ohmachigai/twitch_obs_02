name: ci

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'web/**'

  rust:
    runs-on: ${{ matrix.os }}
    needs: changes
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Cargo fmt
        run: cargo fmt --all --check
      - name: Cargo clippy
        run: cargo clippy --workspace --all-targets -- -D warnings
      - name: Cargo test
        run: cargo test --workspace

  frontend:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: web/overlay/package-lock.json
      - name: Install dependencies
        working-directory: web/overlay
        run: npm ci
      - name: Lint
        working-directory: web/overlay
        run: npm run lint
      - name: Type check
        working-directory: web/overlay
        run: npm run typecheck
      - name: Build
        working-directory: web/overlay
        run: npm run build
